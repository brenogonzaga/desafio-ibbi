"""initial

Revision ID: 7d8f176b73f7
Revises: 
Create Date: 2024-06-20 17:19:01.046012

"""
from datetime import datetime
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from passlib.hash import bcrypt
hashed_password = bcrypt.hash("ibbi_password")


# revision identifiers, used by Alembic.
revision: str = '7d8f176b73f7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

admin_hashed_password = bcrypt.hash("ibbi_password")
user_hashed_passwords = [bcrypt.hash(f"user{i}_password") for i in range(1, 6)]


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('description', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_categories_description'),
                    'categories', ['description'], unique=False)
    op.create_index(op.f('ix_categories_id'),
                    'categories', ['id'], unique=False)
    op.create_table('currency_rates',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('rate', sa.Float(), nullable=False),
                    sa.Column('timestamp', sa.DateTime(), nullable=False),
                    sa.Column('from_currency', sa.Enum('USD', 'BRL',
                                                       name='from_currency'), nullable=False),
                    sa.Column('to_currency', sa.Enum('USD', 'BRL',
                                                     name='to_currency'), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_currency_rates_id'),
                    'currency_rates', ['id'], unique=False)
    op.create_table('users',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('name', sa.String(length=100), nullable=False),
                    sa.Column('username', sa.String(
                        length=100), nullable=False),
                    sa.Column('email', sa.String(length=100), nullable=False),
                    sa.Column('hashed_password', sa.String(), nullable=False),
                    sa.Column('role', sa.Enum('admin', 'user',
                                              name='user_roles'), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('username')
                    )
    op.create_table('products',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('description', sa.String(), nullable=False),
                    sa.Column('price', sa.Float(), nullable=False),
                    sa.Column('quantity', sa.Integer(), nullable=False),
                    sa.Column('low_stock_alert', sa.Integer(), nullable=False),
                    sa.Column('category_id', sa.Integer(), nullable=True),
                    sa.Column('image_url', sa.String(), nullable=True),
                    sa.Column('seller_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['category_id'], ['categories.id'], ondelete='SET NULL'),
                    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_products_description'),
                    'products', ['description'], unique=False)
    op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=False)
    op.create_table('sales',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('timestamp', sa.DateTime(), nullable=True),
                    sa.Column('note', sa.Text(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_sales_id'), 'sales', ['id'], unique=False)
    op.create_table('sale_items',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('sale_id', sa.Integer(), nullable=False),
                    sa.Column('product_id', sa.Integer(), nullable=False),
                    sa.Column('quantity', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
                    sa.ForeignKeyConstraint(['sale_id'], ['sales.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_sale_items_id'),
                    'sale_items', ['id'], unique=False)

    # Criação de categorias
    op.execute(
        """
        INSERT INTO categories (description) VALUES
        ('Eletrônicos'),
        ('Roupas'),
        ('Livros'),
        ('Móveis'),
        ('Esportes'),
        ('Brinquedos'),
        ('Beleza'),
        ('Automóveis'),
        ('Alimentos'),
        ('Bebidas');
        """
    )

    # Criação de usuários
    op.execute(
        """
        INSERT INTO users (name, username, email, hashed_password, role) VALUES
        ('Ibbi Admin', 'ibbi_admin', 'admin_ibbi@example.com', '{}', 'admin'),
        ('User One', 'user1', 'user1@example.com', '{}', 'user'),
        ('User Two', 'user2', 'user2@example.com', '{}', 'user'),
        ('User Three', 'user3', 'user3@example.com', '{}', 'user'),
        ('User Four', 'user4', 'user4@example.com', '{}', 'user'),
        ('User Five', 'user5', 'user5@example.com', '{}', 'user');
        """.format(admin_hashed_password, *user_hashed_passwords)
    )

    # Criação de produtos
    op.execute(
        """
        INSERT INTO products (description, price, quantity, low_stock_alert, category_id, image_url, seller_id) VALUES
        ('Smartphone', 1500.00, 10, 2, 1, 'https://imgs.pontofrio.com.br/55064349/1g.jpg', 2),
        ('Camisa Polo', 100.00, 30, 5, 2, 'https://58532.cdn.simplo7.net/static/58532/sku/masculino-camisas-polo-camisa-polo-tradicional--p-0349-1606916620225.jpeg', 2),
        ('Livro de Python', 50.00, 20, 3, 3, 'https://s3.novatec.com.br/capas-ampliadas/capa-ampliada-9788575224625.jpg', 2),
        ('Sofá', 1200.00, 5, 1, 4, 'https://images.tcdn.com.br/img/img_prod/807429/sofa_6_lugares_retratil_de_canto_com_chaise_d_310_x_175_cm_madrid_linho_off_white_ns_861_1_feb6095bdd3ec9dfc7650d128f7585e7.jpg', 3),
        ('Bola de Futebol', 80.00, 15, 2, 5, 'https://cdnv2.moovin.com.br/tileycalcados/imagens/produtos/det/bola-futebol-campo-nike-park-team-dn3607-0ee49c244c022d6e7b5edfb9d91a5d45.jpg', 4),
        ('Boneca', 60.00, 25, 5, 6, 'https://m.media-amazon.com/images/I/71wj42n1OAL._AC_UF894,1000_QL80_.jpg', 5),
        ('Shampoo', 30.00, 50, 10, 7, 'https://drogariasp.vteximg.com.br/arquivos/ids/1080520-1000-1000/261300---shampoo-dove-reconstrucao-completa-400ml_0000_7791293005010_99_2_1200_72_SRGB.png', 5),
        ('Carro de Brinquedo', 40.00, 35, 5, 8, 'https://a-static.mlcdn.com.br/450x450/carro-de-brinquedo-bs-turbo-diferentes-cores-com-friccao-bs-toys/temtemdigital01/344695-1041/17770bd9a025c578c9631e6db49fe229.jpeg', 4),
        ('Chocolate', 10.00, 100, 20, 9, 'https://images.tcdn.com.br/img/img_prod/638868/chocolate_milka_oreo_barra_100g_1490_1_41c1e186a9a2b98628aac964d850b81a_20231121151943.jpg', 3),
        ('Refrigerante', 5.00, 200, 30, 10, 'https://superprix.vteximg.com.br/arquivos/ids/213951-600-600/5c977f0088a0425c8e725d309a5f6b37_refrigerante-guarana-antarctica-garrafa-3l_lett_1.jpg', 2);
        """
    )

    # Criação de vendas
    op.execute(
        """
        INSERT INTO sales (user_id, timestamp, note) VALUES
        (2, '{}', 'Primeira venda'),
        (3, '{}', 'Segunda venda'),
        (4, '{}', 'Terceira venda'),
        (5, '{}', 'Quarta venda'),
        (6, '{}', 'Quinta venda');
        """.format(
            datetime(2024, 6, 19, 14, 0, 0).strftime('%Y-%m-%d %H:%M:%S'),
            datetime(2024, 6, 20, 10, 0, 0).strftime('%Y-%m-%d %H:%M:%S'),
            datetime(2024, 6, 21, 11, 0, 0).strftime('%Y-%m-%d %H:%M:%S'),
            datetime(2024, 6, 22, 12, 0, 0).strftime('%Y-%m-%d %H:%M:%S'),
            datetime(2024, 6, 23, 13, 0, 0).strftime('%Y-%m-%d %H:%M:%S')
        )
    )

    op.execute(
        """
        INSERT INTO sale_items (sale_id, product_id, quantity) VALUES
        (1, 1, 1),
        (1, 2, 2),
        (2, 3, 1),
        (2, 4, 1),
        (3, 5, 2),
        (3, 6, 1),
        (4, 7, 3),
        (4, 8, 1),
        (5, 9, 5),
        (5, 10, 10);
        """
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sale_items_id'), table_name='sale_items')
    op.drop_table('sale_items')
    op.drop_index(op.f('ix_sales_id'), table_name='sales')
    op.drop_table('sales')
    op.drop_index(op.f('ix_products_id'), table_name='products')
    op.drop_index(op.f('ix_products_description'), table_name='products')
    op.drop_table('products')
    op.drop_table('users')
    op.drop_index(op.f('ix_currency_rates_id'), table_name='currency_rates')
    op.drop_table('currency_rates')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_index(op.f('ix_categories_description'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
